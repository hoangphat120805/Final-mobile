

name: Backend CI

on:
  push:
    
    paths:
      - 'backend/**'
  pull_request:
    
    paths:
      - 'backend/**'

jobs:
  test:
    name: Run Backend Tests
    runs-on: ubuntu-latest 

    defaults:
      run:
        
        working-directory: backend 

    steps:
      - name: Checkout code
        
        uses: actions/checkout@v4

      # Bỏ qua bước cài đặt docker-compose vì runner của GitHub đã tích hợp sẵn `docker compose`
      # - name: Install docker-compose ...

      - name: Create .env file for Docker Compose
        
        run: |
          echo "POSTGRES_USER=testuser" > .env
          echo "POSTGRES_PASSWORD=testpass" >> .env
          echo "POSTGRES_DB=testdb" >> .env
          echo "POSTGRES_EXTERNAL_PORT=5432" >> .env # Cổng này không quá quan trọng trong CI
          echo "SECRET_KEY=a_random_secret_key_for_ci" >> .env
          # Thêm các biến khác nếu docker-compose.yml cần

      - name: Create .env.test file for Pytest in CI
        
        run: |
          echo "POSTGRES_USER=testuser" > .env.test
          echo "POSTGRES_PASSWORD=testpass" >> .env.test
          echo "POSTGRES_DB=testdb" >> .env.test
          echo "POSTGRES_PORT=5432" >> .env.test   # Luôn dùng cổng nội bộ của Postgres
          echo "POSTGRES_HOST=db" >> .env.test     # <--- SỬA LỖI QUAN TRỌNG NHẤT
          echo "SECRET_KEY=a_random_secret_key_for_ci" >> .env.test
          # Thêm các biến khác nếu pytest/app config của bạn cần

      - name: Start Database Service
      
        run: docker compose up -d --wait db

      - name: Run migrations
        run: docker compose run migrate

      - name: Run backend tests
        run: docker compose run web pytest