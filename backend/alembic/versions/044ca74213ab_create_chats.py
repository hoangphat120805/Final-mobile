"""create chats

Revision ID: 044ca74213ab
Revises: 6026d6f85b4b
Create Date: 2025-09-05 18:52:19.789921

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision: str = '044ca74213ab'
down_revision: Union[str, Sequence[str], None] = '6026d6f85b4b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None
conversation_type_enum = sa.Enum('PRIVATE', 'GROUP', name='conversationtype')

def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('conversationmember',
    sa.Column('conversation_id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('unread_count', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversation.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('conversation_id', 'user_id')
    )
    conversation_type_enum.create(op.get_bind(), checkfirst=True)
    op.add_column('conversation', sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True))
    op.add_column('conversation', sa.Column('type', conversation_type_enum, nullable=False))
    op.add_column('conversation', sa.Column('last_message_id', sa.Uuid(), nullable=True))
    op.drop_index(op.f('ix_conversation_user1_id'), table_name='conversation')
    op.drop_index(op.f('ix_conversation_user2_id'), table_name='conversation')
    op.create_index(op.f('ix_conversation_last_message_id'), 'conversation', ['last_message_id'], unique=False)
    op.create_index(op.f('ix_conversation_updated_at'), 'conversation', ['updated_at'], unique=False)
    op.drop_constraint(op.f('conversation_user1_id_fkey'), 'conversation', type_='foreignkey')
    op.drop_constraint(op.f('conversation_user2_id_fkey'), 'conversation', type_='foreignkey')
    op.create_foreign_key(None, 'conversation', 'message', ['last_message_id'], ['id'])
    op.drop_column('conversation', 'user2_id')
    op.drop_column('conversation', 'user1_id')
    op.add_column('message', sa.Column('is_deleted', sa.Boolean(), nullable=False))
    op.add_column('message', sa.Column('deleted_at', sa.DateTime(), nullable=True))
    op.create_index(op.f('ix_message_created_at'), 'message', ['created_at'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_message_created_at'), table_name='message')
    op.drop_column('message', 'deleted_at')
    op.drop_column('message', 'is_deleted')
    op.add_column('conversation', sa.Column('user1_id', sa.UUID(), autoincrement=False, nullable=False))
    op.add_column('conversation', sa.Column('user2_id', sa.UUID(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'conversation', type_='foreignkey')
    op.create_foreign_key(op.f('conversation_user2_id_fkey'), 'conversation', 'user', ['user2_id'], ['id'])
    op.create_foreign_key(op.f('conversation_user1_id_fkey'), 'conversation', 'user', ['user1_id'], ['id'])
    op.drop_index(op.f('ix_conversation_updated_at'), table_name='conversation')
    op.drop_index(op.f('ix_conversation_last_message_id'), table_name='conversation')
    op.create_index(op.f('ix_conversation_user2_id'), 'conversation', ['user2_id'], unique=False)
    op.create_index(op.f('ix_conversation_user1_id'), 'conversation', ['user1_id'], unique=False)
    op.drop_column('conversation', 'last_message_id')
    op.drop_column('conversation', 'type')
    op.drop_column('conversation', 'name')
    op.drop_table('conversationmember')
    conversation_type_enum.drop(op.get_bind(), checkfirst=True)
    # ### end Alembic commands ###
