"""Add location geometry to Order

Revision ID: 44ee385b221c
Revises: a8ff23a82374
Create Date: 2025-08-24 14:52:39.555274

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes
import geoalchemy2


# revision identifiers, used by Alembic.
revision: str = '44ee385b221c'
down_revision: Union[str, Sequence[str], None] = 'a8ff23a82374'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('transaction',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('order_id', sa.Uuid(), nullable=False),
    sa.Column('payer_id', sa.Uuid(), nullable=False),
    sa.Column('payee_id', sa.Uuid(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('method', sa.Enum('CASH', 'WALLET', name='transactionmethod'), nullable=False),
    sa.Column('status', sa.Enum('SUCCESSFUL', 'FAILED', 'PENDING', name='transactionstatus'), nullable=False),
    sa.Column('transaction_date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['order.id'], ),
    sa.ForeignKeyConstraint(['payee_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['payer_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_transaction_order_id'), 'transaction', ['order_id'], unique=True)
    op.create_index(op.f('ix_transaction_payee_id'), 'transaction', ['payee_id'], unique=False)
    op.create_index(op.f('ix_transaction_payer_id'), 'transaction', ['payer_id'], unique=False)
    op.add_column('order', sa.Column('location', geoalchemy2.types.Geometry(geometry_type='POINT', srid=4326, dimension=2, from_text='ST_GeomFromEWKT', name='geometry'), nullable=True))
    op.add_column('order', sa.Column('total_amount_paid', sa.Float(), nullable=True))
    op.execute('DROP INDEX IF EXISTS idx_order_location')
    op.create_index('idx_order_location', 'order', ['location'], unique=False, postgresql_using='gist')
    op.drop_column('order', 'pickup_latitude')
    op.drop_column('order', 'pickup_longitude')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('order', sa.Column('pickup_longitude', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('order', sa.Column('pickup_latitude', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.drop_index('idx_order_location', table_name='order', postgresql_using='gist')
    op.drop_column('order', 'total_amount_paid')
    op.drop_column('order', 'location')
    op.drop_index(op.f('ix_transaction_payer_id'), table_name='transaction')
    op.drop_index(op.f('ix_transaction_payee_id'), table_name='transaction')
    op.drop_index(op.f('ix_transaction_order_id'), table_name='transaction')
    op.drop_table('transaction')
    # ### end Alembic commands ###
