"""add table notifacation and noti_user

Revision ID: 83c9e29974a5
Revises: 7faac493cf35
Create Date: 2025-08-27 19:51:50.633704

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '83c9e29974a5'
down_revision: Union[str, Sequence[str], None] = '7faac493cf35'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('notification',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('message', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_notification_id'), 'notification', ['id'], unique=False)
    op.create_table('noti_user',
    sa.Column('notification_id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('is_read', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['notification_id'], ['notification.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('notification_id', 'user_id')
    )
    op.drop_index(op.f('ix_address_user_id'), table_name='address')
    op.drop_table('address')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('address',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('street', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('city', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('district', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('ward', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('street_address', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('longitude', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('latitude', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('is_default', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('address_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('address_pkey'))
    )
    op.create_index(op.f('ix_address_user_id'), 'address', ['user_id'], unique=False)
    op.drop_table('noti_user')
    op.drop_index(op.f('ix_notification_id'), table_name='notification')
    op.drop_table('notification')
    # ### end Alembic commands ###
